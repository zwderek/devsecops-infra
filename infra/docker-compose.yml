version: '3.8'

services:
  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ./jenkins/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - devsecops-net

  mysql:
    image: mysql:9.1
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: petclinic
      MYSQL_USER: petclinic
      MYSQL_PASSWORD: petclinic
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    networks:
      - devsecops-net

  postgres:
    image: postgres:17.0
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: petclinic
      POSTGRES_USER: petclinic
      POSTGRES_PASSWORD: petclinic
    ports:
      - "5432:5432"
    networks:
      - devsecops-net

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    networks:
      - devsecops-net
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/petclinic
      - SONAR_JDBC_USERNAME=petclinic
      - SONAR_JDBC_PASSWORD=petclinic
    depends_on:
      - postgres

  owasp-zap:
    image: owasp/zap2docker-stable
    container_name: owasp-zap
    entrypoint: [ "tail", "-f", "/dev/null" ]
    networks:
      - devsecops-net

networks:
  devsecops-net:
    external: true
